# .github/workflows/deploy.yml
name: Deploy to AWS

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]


env:
  PROJECT_NAME: aselcni
  BUCKET_NAME: learnway-bucket
  CODE_DEPLOY_APP_NAME: learnway
  DEPLOYMENT_GROUP_NAME: learnway
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
  
      - name: Get Public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET__ACCESS_KEY }}
          aws-region: 'ap-northeast-2'

      # - name: Add GitHub Actions IP
      #   run: |
      #     aws ec2 authorize-security-group-ingress \
      #         --group-id ${{ secrets.SECURITY_GROUP_ID }} \
      #         --protocol tcp \
      #         --port 3306 \
      #         --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Add GitHub Actions IP to MySQL RDS Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 3306 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
        if: ${{ github.event_name == 'push' }}
          
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # 빌드 과정
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
        
      - name: Build with Gradle
        run: ./gradlew build --warning-mode all --scan
        shell: bash
        
      - name: Archive test reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: build/reports/tests/test/

      # MySQL 설정 확인 (Optional)
      - name: Verify MySQL Configuration
        run: cat src/main/resources/application.properties
        shell: bash
        
      # zip파일로 변환
      - name: Make Zip File                
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash
          
      # AWS S3에 zip파일 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
  
      # AWS codeDeploy 배포 생성
      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
